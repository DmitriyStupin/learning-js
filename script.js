/*
  В JS есть все привычные математические операции
*/


/*
  Бинарные операторы - применяются к 2-ум операндам (числам)
  Унарные операторы - применяются к 1-ому операнду (числу)
*/
console.log(-10)
console.log(5 * -2 + 10 / -3)


/*
  С помощью унарного оператора "+" можно привести значение к типу Number
*/
console.log(+true)
console.log(+false)
console.log(+'123')
console.log(+undefined)
console.log(+null)


/*
  У унарных операторов приоритет выше, чем у бинарных
*/
console.log('3' + '5')
console.log(+'3' + +'5')


/*
  С помощью +=, -+, *=, /= можно присвоить новое значение переменной
  С конкатенацией строк всё работает также
*/
let a1 = 1
a1 += 1
console.log(a1)
a1 *= 2
console.log(a1)
a1 -= 1
console.log(a1)
a1 /= 100
console.log(a1)


/*
  Декремент - уменьшение числового значение на 1
  Инкремент - увеличение числового значение на 1
*/
let count = 10
count--
count--
count++
count--
console.log(count)
// Мы записили их в постфиксной форме, есть также префиксная форма ++count
// А в чем собственно разница?

let num = 10
let newNum = ++num // Мы сначала присвоили новое значение num, а затем присвоили это значение
// и newNum и он равняется num
console.log(num)
console.log(newNum)

let num1 = 10
let newNum1 = num1++ // Тут мы сначала присвоили numNum1 значение num1 равное 10
// А затем увеличили num1 на 1 и оно стало равняться 11
console.log(num1)
console.log(newNum1)


/*
  Здесь также есть операторы сравнения >, <, >=, <=, ==, !=
*/


/*
  Строки сравниваются посимвольно в кодировке Unicode
*/


/*
  Есть строгое (без приведения типов) и нестрогое (с привидением типов) сравнение.
  Строгое: === (Лучше пользоваться этим)
  Нестрогое: ==
*/